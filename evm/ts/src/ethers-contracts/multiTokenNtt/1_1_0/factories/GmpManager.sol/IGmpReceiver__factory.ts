/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IGmpReceiver,
  IGmpReceiverInterface,
} from "../../GmpManager.sol/IGmpReceiver.js";

const _abi = [
  {
    type: "function",
    name: "receiveMessage",
    inputs: [
      {
        name: "sourceChainId",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "sender",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IGmpReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): IGmpReceiverInterface {
    return new Interface(_abi) as IGmpReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IGmpReceiver {
    return new Contract(address, _abi, runner) as unknown as IGmpReceiver;
  }
}
